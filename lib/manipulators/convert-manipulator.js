// Generated by CoffeeScript 1.10.0
(function() {
  var ConvertManipulator, child_process,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  child_process = require('child_process');

  ConvertManipulator = (function() {
    function ConvertManipulator(image_path, params, info, final_image_path) {
      this.image_path = image_path;
      this.params = params;
      this.info = info;
      this.final_image_path = final_image_path;
      this.convert_cmd = bind(this.convert_cmd, this);
      this.manipulate = bind(this.manipulate, this);
    }

    ConvertManipulator.prototype.manipulate = function(callback) {
      var convert_cmd;
      convert_cmd = this.convert_cmd();
      return child_process.exec(convert_cmd, (function(_this) {
        return function(err, stdout, stderr) {
          return callback();
        };
      })(this));
    };

    ConvertManipulator.prototype.convert_cmd = function() {
      var cmd, degrees;
      cmd = "convert " + this.image_path + " ";
      if (this.params.size !== 'full') {
        if (this.params.size.w != null) {
          cmd += " -resize " + this.params.size.w + " ";
        } else {
          cmd += " -resize x" + this.params.size.h + " ";
        }
      }
      degrees = this.params.rotation.degrees;
      if (degrees !== 0 && (degrees === 90 || degrees === 180 || degrees === 270)) {
        cmd += " -rotate " + degrees + " ";
      }
      return cmd + (" " + this.final_image_path);
    };

    return ConvertManipulator;

  })();

  exports.ConvertManipulator = ConvertManipulator;

}).call(this);
