// Generated by CoffeeScript 1.10.0
(function() {
  var IIIFImageRequestParser;

  IIIFImageRequestParser = (function() {
    function IIIFImageRequestParser(url) {
      this.url = url;
    }

    IIIFImageRequestParser.prototype.parse = function() {
      var format, h, identifier, pct, quality, quality_format, ref, ref1, ref2, region, region_parts, region_type, rotation, size, size_type, url_parts, w, x, x_string, y;
      url_parts = this.url.split('/');
      quality_format = url_parts.pop();
      ref = quality_format.split('.'), quality = ref[0], format = ref[1];
      rotation = url_parts.pop();
      size = url_parts.pop();
      region = url_parts.pop();
      identifier = url_parts.pop();
      if (region.match(/,/)) {
        region_parts = region.split(',');
        h = parseInt(region_parts.pop());
        w = parseInt(region_parts.pop());
        y = parseInt(region_parts.pop());
        if (region.match(/pct:/)) {
          region_type = 'regionByPct';
          ref1 = region_parts.pop().split(':'), pct = ref1[0], x_string = ref1[1];
        } else {
          region_type = 'regionByPx';
          x_string = region_parts.pop();
        }
        x = parseInt(x_string);
        region = {
          x: x,
          y: y,
          w: w,
          h: h
        };
      }
      if (size.match(/,/)) {
        ref2 = size.split(','), w = ref2[0], h = ref2[1];
        console.log([w, h]);
        w = w === '' ? void 0 : parseInt(w);
        h = h === '' ? void 0 : parseInt(h);
        console.log([w, h]);
        size_type = this.determine_size_type(size);
        size = {
          w: w,
          h: h
        };
      }
      return {
        identifier: identifier,
        region: region,
        size: size,
        rotation: rotation,
        quality: quality,
        format: format,
        region_type: region_type,
        size_type: size_type
      };
    };

    IIIFImageRequestParser.prototype.determine_size_type = function(size) {
      var h, ref, w;
      ref = size.split(','), w = ref[0], h = ref[1];
      if ((w != null) && (h != null)) {
        return 'sizeByWh';
      } else if (w != null) {
        return 'sizeByW';
      }
    };

    return IIIFImageRequestParser;

  })();

  exports.IIIFImageRequestParser = IIIFImageRequestParser;

}).call(this);
